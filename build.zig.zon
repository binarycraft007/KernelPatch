.{
    .name = "KernelPatch",
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .clap = .{
            .url = "git+https://github.com/Hejsil/zig-clap#4267b0b60ef6f87cccf3ee6ed481e6d0759180c6",
            .hash = "12202fa30d679d821292bcd953458b9e76097a5d16999489125a206db63a53392833",
        },
        .android = .{
            .url = "git+https://github.com/binarycraft007/android-zig#6b86fb45237f043618c377b3800e3fe9caf167cf",
            .hash = "122055b5a5bf99425a73ba79a3e1e52d0bc04138a91cd40b16db7cfaa8dfb4d49320",
        },
    },
    .paths = .{
        // This makes *all* files, recursively, included in this package. It is generally
        // better to explicitly list the files and directories instead, to insure that
        // fetching from tarballs, file system paths, and version control all result
        // in the same contents hash.
        "",
        // For example...
        //"build.zig",
        //"build.zig.zon",
        //"src",
        //"LICENSE",
        //"README.md",
    },
}
